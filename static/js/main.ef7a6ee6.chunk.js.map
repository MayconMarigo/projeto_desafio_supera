{"version":3,"sources":["components/body/products/cart-icon.svg","components/body/products/Products.js","main/App.js","index.js"],"names":["Products","props","openCart","e","setState","openModal","car","state","carrinho","subTotalValueAdd","freteAdd","i","length","Object","values","preco","subtotal","frete","total","onCloseModal","prod","produtos","counter","handleSelectChange","bind","submitFunction","removeFromCart","removeTarget","parseInt","target","value","this","swal","text","buttons","dangerMode","then","remove","id","splice","indexOf","thisCounter","sort","a","b","name","score","price","preventDefault","nome","childNodes","innerText","title","Adicionar","parseFloat","attributes","nodeValue","orderByName","orderByMajorPrice","orderByMinorPrice","orderByScore","className","onClick","src","cartIcon","open","onClose","data-testid","map","el","toFixed","onChange","onSubmit","image","alt","img","type","val","val1","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uvCAAe,MAA0B,sC,uBCQpBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgBRC,SAAW,SAACC,GACV,EAAKC,SAAS,CAAEC,WAAW,IAO3B,IALA,IAAMC,EAAM,EAAKC,MAAMC,SAEnBC,EAAmB,EACnBC,EAAW,EAENC,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC9BF,GAAoBI,OAAOC,OAAOR,GAAKK,GAAGI,MAC1CL,GAAY,GAGVD,EAAmB,IACrB,EAAKL,SAAS,CACZY,SAAUP,EACVQ,MAAO,EACPC,MAAOT,IAGT,EAAKL,SAAS,CACZY,SAAUP,EACVQ,MAAOP,EACPQ,MAAOR,EAAWD,KAxCL,EA6CnBU,aAAe,WACb,EAAKf,SAAS,CAAEC,WAAW,KA5C3B,EAAKE,MAAQ,CACXa,KAAM,CAACC,GACPb,SAAU,GACVU,MAAO,EACPF,SAAU,EACVC,MAAO,EACPZ,WAAW,EACXiB,QAAS,GAGX,EAAKC,mBAAqB,EAAKA,mBAAmBC,KAAxB,gBAC1B,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,eAAiB,EAAKA,eAAeF,KAApB,gBAdL,E,kDAiDnB,SAAerB,GAAI,IAAD,OACVwB,EAAeC,SAASzB,EAAE0B,OAAOC,OACjCxB,EAAMyB,KAAKxB,MAAMC,SAEvBwB,IAAK,CACHC,KAAK,+CACLC,QAAS,CAAC,SAAU,WACpBC,YAAY,IACXC,MAAK,SAACC,GACP,GAAIA,EAAQ,CACV,IAAK,IAAI1B,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC1BE,OAAOC,OAAOR,GAAKK,GAAG2B,IAAMX,GAC9BrB,EAAIiC,OAAOjC,EAAIkC,QAAQb,GAAe,GAG1C,EAAKzB,WACL,IAAMuC,EAAc,EAAKlC,MAAMe,QAC/B,EAAKlB,SAAS,CAAEkB,QAASmB,EAAc,SAEvCT,IAAK,qC,yBAKX,WACEX,EAASqB,MAAK,SAAUC,EAAGC,GACzB,OAAID,EAAEE,KAAOD,EAAEC,MAAc,EACzBF,EAAEE,KAAOD,EAAEC,KAAa,EACrB,O,0BAIX,WACExB,EAASqB,MAAK,SAAUC,EAAGC,GACzB,OAAID,EAAEG,MAAQF,EAAEE,MAAc,EAC1BH,EAAEG,MAAQF,EAAEE,OAAe,EACxB,O,+BAIX,WACEzB,EAASqB,MAAK,SAAUC,EAAGC,GACzB,OAAID,EAAEI,MAAQH,EAAEG,OAAe,EAC3BJ,EAAEI,MAAQH,EAAEG,MAAc,EACvB,O,+BAIX,WACE1B,EAASqB,MAAK,SAAUC,EAAGC,GACzB,OAAID,EAAEI,MAAQH,EAAEG,OAAe,EAC3BJ,EAAEI,MAAQH,EAAEG,MAAc,EACvB,O,4BAIX,SAAe5C,GAAI,IAAD,OACVG,EAAMyB,KAAKxB,MAAMC,SACvBL,EAAE6C,iBAGF,IAFA,IAAMP,EAAcV,KAAKxB,MAAMe,QAEtBX,EAAI,EAAGA,EAAIL,EAAIM,OAAQD,IAC9B,GAAIL,EAAIK,GAAGsC,MAAQ9C,EAAE0B,OAAOqB,WAAW,GAAGC,UA6BxC,YA5BAnB,IAAK,CACHoB,MAAO,4CACPnB,KAAK,aAAD,OAAe9B,EAAE0B,OAAOqB,WAAW,GAAGC,UAAtC,yEACJjB,QAAS,CAAC,WAAY,yBACtBC,YAAY,IACXC,MAAK,SAACiB,GACP,GAAIA,EAiBF,OAhBA,EAAKjD,SAAS,CACZI,SAAS,GAAD,mBACH,EAAKD,MAAMC,UADR,CAEN,CACEyC,KAAM9C,EAAE0B,OAAOqB,WAAW,GAAGC,UAC7BpC,MAAOuC,WACLnD,EAAE0B,OAAOqB,WAAW,GAAGK,WAAW,GAAGC,WAEvClB,GAAIgB,WACFnD,EAAE0B,OAAOqB,WAAW,GAAGK,WAAW,GAAGC,gBAK7CxB,IAAK,sDACL,EAAK5B,SAAS,CAAEkB,QAASmB,EAAc,IAGvCT,IAAK,iCAObA,IAAK,WAAD,OACS7B,EAAE0B,OAAOqB,WAAW,GAAGC,UADhC,2DAGJpB,KAAK3B,SAAS,CAAEkB,QAASmB,EAAc,IAEvCV,KAAK3B,SAAS,CACZI,SAAS,GAAD,mBACHuB,KAAKxB,MAAMC,UADR,CAEN,CACEyC,KAAM9C,EAAE0B,OAAOqB,WAAW,GAAGC,UAC7BpC,MAAOuC,WAAWnD,EAAE0B,OAAOqB,WAAW,GAAGK,WAAW,GAAGC,WACvDlB,GAAIgB,WAAWnD,EAAE0B,OAAOqB,WAAW,GAAGK,WAAW,GAAGC,kB,gCAM5D,SAAmBrD,GACjB,OAAQA,EAAE0B,OAAOC,OACf,IAAK,OACHC,KAAK3B,SAAS,CAAEgB,KAAMW,KAAK0B,YAAYtD,KACvC,MACF,IAAK,cACH4B,KAAK3B,SAAS,CAAEgB,KAAMW,KAAK2B,kBAAkBvD,KAC7C,MACF,IAAK,cACH4B,KAAK3B,SAAS,CAAEgB,KAAMW,KAAK4B,kBAAkBxD,KAC7C,MACF,IAAK,QACH4B,KAAK3B,SAAS,CAAEgB,KAAMW,KAAK6B,aAAazD,Q,oBAK9C,WAAU,IAAD,SAC+C4B,KAAKxB,MAAnDC,EADD,EACCA,SAAUc,EADX,EACWA,QAASJ,EADpB,EACoBA,MAAOF,EAD3B,EAC2BA,SAAUC,EADrC,EACqCA,MAC5C,OACE,qCACE,mCACE,sBAAK4C,UAAU,SAASC,QAAS/B,KAAK7B,SAAtC,UACE,qBAAK6D,IAAKC,IACV,kDACiB1C,EAAS,IACvBA,GAAWA,EAAU,EAAI,QAAU,OAAQ,UAGhD,eAAC,IAAD,CAAO2C,KAAMlC,KAAKxB,MAAMF,UAAW6D,QAASnC,KAAKZ,aAAcgD,cAAY,QAA3E,UACE,4BAAG,iCAAQ,kDACV3D,EAAS4D,KAAI,SAACC,GACb,OACE,sBAAKR,UAAU,gBAAf,UACE,iCAASQ,EAAGpB,OACZ,uBACA,wCAAWoB,EAAGtD,MAAMuD,QAAQ,EAAG,MAC/B,uBACA,wBAAQxC,MAAOuC,EAAG/B,GAAIwB,QAAS,EAAKpC,eAApC,4BALkC2C,EAAG/B,OAW3C,8BAAG,mDAA+BtB,EAASsD,QAAQ,MACnD,8BAAG,gDAA4BrD,KAC/B,8BAAG,gDAA4BC,EAAMoD,QAAQ,YAIjD,qBAAKT,UAAU,SAAf,SACE,yBAAQU,SAAUxC,KAAKR,mBAAvB,UACE,oDACA,wBAAQO,MAAM,OAAd,iCACA,wBAAQA,MAAM,cAAd,6BACA,wBAAQA,MAAM,cAAd,4BACA,wBAAQA,MAAM,QAAd,kCAIJ,qBAAK+B,UAAU,YAAf,SACGxC,EAAS+C,KAAI,SAACC,GAAD,OACZ,qBAAKR,UAAU,OAAmBM,cAAY,OAA9C,SACE,uBAAMK,SAAU,EAAK/C,eAArB,UACE,qBAAKsC,IAAKM,EAAGI,MAAOC,IAAKL,EAAGM,MAC5B,6BACE,4BAAIN,EAAGxB,SAET,8BACE,oDADF,IACmCwB,EAAGvB,SAEtC,uBACE8B,KAAK,SACLf,UAAU,MACV/B,MAAK,2BAAsBuC,EAAGtB,MAAMuB,QAAQ,EAAG,IAC/CO,IAAKR,EAAGtB,MACR+B,KAAMT,EAAG/B,SAdY+B,EAAG/B,gB,GAhOJyC,aCCvBC,MANf,WACE,OACI,cAAC,EAAD,KCDNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.ef7a6ee6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cart-icon.f62597cd.svg\";","import React, { Component } from \"react\";\r\nimport \"./Products.css\";\r\nimport produtos from \"../products.json\";\r\nimport swal from \"sweetalert\";\r\nimport cartIcon from \"./cart-icon.svg\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport \"react-responsive-modal/styles.css\";\r\n\r\nexport default class Products extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      prod: [produtos],\r\n      carrinho: [],\r\n      total: 0,\r\n      subtotal: 0,\r\n      frete: 0,\r\n      openModal: false,\r\n      counter: 0,\r\n    };\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.submitFunction = this.submitFunction.bind(this);\r\n    this.removeFromCart = this.removeFromCart.bind(this);\r\n  }\r\n\r\n  openCart = (e) => {\r\n    this.setState({ openModal: true });\r\n\r\n    const car = this.state.carrinho;\r\n\r\n    let subTotalValueAdd = 0;\r\n    let freteAdd = 0;\r\n\r\n    for (let i = 0; i < car.length; i++) {\r\n      subTotalValueAdd += Object.values(car)[i].preco;\r\n      freteAdd += 10;\r\n    }\r\n\r\n    if (subTotalValueAdd > 250) {\r\n      this.setState({\r\n        subtotal: subTotalValueAdd,\r\n        frete: 0,\r\n        total: subTotalValueAdd,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        subtotal: subTotalValueAdd,\r\n        frete: freteAdd,\r\n        total: freteAdd + subTotalValueAdd,\r\n      });\r\n    }\r\n  };\r\n\r\n  onCloseModal = () => {\r\n    this.setState({ openModal: false });\r\n  };\r\n\r\n  removeFromCart(e) {\r\n    const removeTarget = parseInt(e.target.value);\r\n    const car = this.state.carrinho;\r\n\r\n    swal({\r\n      text: `Tem certeza que deseja remover do carrinho ?`,\r\n      buttons: [\"Manter\", \"Remover\"],\r\n      dangerMode: true,\r\n    }).then((remove) => {\r\n      if (remove) {\r\n        for (let i = 0; i < car.length; i++) {\r\n          if (Object.values(car)[i].id == removeTarget) {\r\n            car.splice(car.indexOf(removeTarget), 1);\r\n          }\r\n        }\r\n        this.openCart();\r\n        const thisCounter = this.state.counter;\r\n        this.setState({ counter: thisCounter - 1 });\r\n      }else{\r\n        swal(\"Seu carrinho está seguro!\")\r\n      }\r\n    });\r\n  }\r\n\r\n  orderByName() {\r\n    produtos.sort(function (a, b) {\r\n      if (a.name < b.name) return -1;\r\n      if (a.name > b.name) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  orderByScore() {\r\n    produtos.sort(function (a, b) {\r\n      if (a.score < b.score) return 1;\r\n      if (a.score > b.score) return -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  orderByMinorPrice() {\r\n    produtos.sort(function (a, b) {\r\n      if (a.price < b.price) return -1;\r\n      if (a.price > b.price) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  orderByMajorPrice() {\r\n    produtos.sort(function (a, b) {\r\n      if (a.price > b.price) return -1;\r\n      if (a.price < b.price) return 1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  submitFunction(e) {\r\n    const car = this.state.carrinho;\r\n    e.preventDefault();\r\n    const thisCounter = this.state.counter;\r\n\r\n    for (let i = 0; i < car.length; i++) {\r\n      if (car[i].nome == e.target.childNodes[1].innerText) {\r\n        swal({\r\n          title: \"Já existe um produto igual no carrinho\",\r\n          text: `O produto ${e.target.childNodes[1].innerText} já foi adicionado ao carrinho, deseja adicionar mais uma unidade?`,\r\n          buttons: [\"Cancelar\", \"Adicionar ao carrinho\"],\r\n          dangerMode: false,\r\n        }).then((Adicionar) => {\r\n          if (Adicionar) {\r\n            this.setState({\r\n              carrinho: [\r\n                ...this.state.carrinho,\r\n                {\r\n                  nome: e.target.childNodes[1].innerText,\r\n                  preco: parseFloat(\r\n                    e.target.childNodes[3].attributes[2].nodeValue\r\n                  ),\r\n                  id: parseFloat(\r\n                    e.target.childNodes[3].attributes[3].nodeValue\r\n                  ),\r\n                },\r\n              ],\r\n            });\r\n            swal(\"Produto adicionado com sucesso, boas compras!\");\r\n            this.setState({ counter: thisCounter + 1 });\r\n            return;\r\n          } else {\r\n            swal(\"Produto não adicionado!\");\r\n          }\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    swal(\r\n      `Produto ${e.target.childNodes[1].innerText} foi adicionado ao carrinho com sucesso, boas compras!`\r\n    );\r\n    this.setState({ counter: thisCounter + 1 });\r\n\r\n    this.setState({\r\n      carrinho: [\r\n        ...this.state.carrinho,\r\n        {\r\n          nome: e.target.childNodes[1].innerText,\r\n          preco: parseFloat(e.target.childNodes[3].attributes[2].nodeValue),\r\n          id: parseFloat(e.target.childNodes[3].attributes[3].nodeValue),\r\n        },\r\n      ],\r\n    });\r\n  }\r\n\r\n  handleSelectChange(e) {\r\n    switch (e.target.value) {\r\n      case \"name\":\r\n        this.setState({ prod: this.orderByName(e) });\r\n        break;\r\n      case \"price-major\":\r\n        this.setState({ prod: this.orderByMajorPrice(e) });\r\n        break;\r\n      case \"price-minor\":\r\n        this.setState({ prod: this.orderByMinorPrice(e) });\r\n        break;\r\n      case \"score\":\r\n        this.setState({ prod: this.orderByScore(e) });\r\n        break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { carrinho, counter, total, subtotal, frete } = this.state;\r\n    return (\r\n      <>\r\n        <header>\r\n          <div className=\"toggle\" onClick={this.openCart}>\r\n            <img src={cartIcon}></img>\r\n            <span>\r\n              Seu carrinho: {counter}{\" \"}\r\n              {counter && counter > 1 ? \"Itens\" : \"Item\"}{\" \"}\r\n            </span>\r\n          </div>\r\n          <Modal open={this.state.openModal} onClose={this.onCloseModal} data-testid=\"modal\">\r\n            <p><strong><u>Seu Carrinho:</u></strong></p>\r\n            {carrinho.map((el) => {\r\n              return (\r\n                <div className=\"carrinho-card\" key={el.id}>\r\n                  <strong>{el.nome}</strong>\r\n                  <br />\r\n                  <span>R$: {el.preco.toFixed(2, 0)}</span>\r\n                  <br />\r\n                  <button value={el.id} onClick={this.removeFromCart}>\r\n                    Remover item\r\n                  </button>\r\n                </div>\r\n              );\r\n            })}\r\n            <p><strong>Subtotal: R$ </strong>{subtotal.toFixed(2)}</p>\r\n            <p><strong>Frete: R$ </strong>{frete}</p>\r\n            <p><strong>Total: R$ </strong>{total.toFixed(2)}</p>\r\n          </Modal>\r\n        </header>\r\n\r\n        <div className=\"select\">\r\n          <select onChange={this.handleSelectChange}>\r\n            <option>Ordenar por...</option>\r\n            <option value=\"name\">Ordem alfabética</option>\r\n            <option value=\"price-minor\">Menor preço </option>\r\n            <option value=\"price-major\">Maior Preço</option>\r\n            <option value=\"score\">Mais relevantes</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"container\" >\r\n          {produtos.map((el) => (\r\n            <div className=\"card\" key={el.id} data-testid=\"card\" >\r\n              <form onSubmit={this.submitFunction}>\r\n                <img src={el.image} alt={el.img}></img>\r\n                <h4>\r\n                  <u>{el.name}</u>\r\n                </h4>\r\n                <p>\r\n                  <strong>Popularidade :</strong> {el.score}\r\n                </p>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"buy\"\r\n                  value={`Adicionar por R$ ${el.price.toFixed(2, 0)}`}\r\n                  val={el.price}\r\n                  val1={el.id}\r\n                />\r\n              </form>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Products from \"../components/body/products/Products\";\n\nfunction App() {\n  return (\n      <Products />\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./main/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}